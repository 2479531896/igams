spring:
  application:
    name: server-index
  session:
    #session存储类型
    store-type: redis
        #设置session超时时间
    timeout: 2000
  ## druid配置
  datasource:
    ## 连接池最小连接数量
    minIdle: 5
    ## 连接池最大连接数量
    maxActive: 100
    ## 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
    initialSize: 10
    ## 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
    maxWait: 60000
    ## 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒;有两个含义：1) Destroy线程会检测连接的间隔时间 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
    timeBetweenEvictionRunsMillis: 60000
    ## 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    ## 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    testWhileIdle: true
    ## 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
    testOnBorrow: false
    ## 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnReturn: false
    ## 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。5.5及以上版本有PSCache，建议开启。
    poolPreparedStatements: true
    ## 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
    maxPoolPreparedStatementPerConnectionSize: 100
    ## Druid的监控统计功能:属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
        #监控统计用的filter:stat
        #日志用的filter:slf4j
        #防御SQL注入的filter:wall
    filters: config,stat,slf4j
    ## 连接数据库的额外参数 
    connectionProperties: 3000;
    ## 缺省多个DruidDataSource的监控数据是各自独立的，在Druid-0.2.17版本之后，支持配置公用监控数据，
    useGlobalDataSourceStat: true
    ## druid的登录用户名
    druidLoginName: admin
    ## druid的登录密码
    druidPassword: 1234
    ## 超过时间限制是否回收
    removeAbandoned: true
    ## 超过时间限制多长，单位是毫秒 ，180000毫秒=3分钟
    removeAbandonedTimeout: 180000
  thymeleaf:
    #prefix: classpath*:/static/
    suffix: .html
    encoding: UTF-8
    cache: false
    #缓存管理
  cache:
    ehcache:
      config: classpath:config/ehcache/ehcache.xml
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器地址
    host: localhost
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password: 
    pool:
            # 连接池最大连接数（使用负值表示没有限制）
      max-active: 8
            # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: -1
            # 连接池中的最大空闲连接
      max-idle: 8
            # 连接池中的最小空闲连接
      min-idle: 0
        # 连接超时时间（毫秒）中时间设置不能为0
    timeout: 5000
  #spring boot自带的tomcat限制了上传图片的大小，为1M
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 1000MB
  #消息队列
  rabbitmq:
    host: 172.17.60.190
    port: 5672
    username: admin
    password: matridx2019!
    #发送确认
    publisher-confirms: true
    #virtual-host: /
postsql:
  datasource:
    driverClassName: org.postgresql.Driver
    username: AEBrmFhq9gZ4Yeq+mogdzQ==
    password: MrTVAg0Sn2SfQZE/HUZ5IQ==
    url: E6Bxa5hFXjN+sYdjKG06wOCsp1DH0IZMJUquJ5w+uYPtmycHAIPwBJtbT3XsGaP4
    validationQuery: SELECT 1 
druid:
  stat:
    ## 连接数据库的额外参数 
    slowSqlMillis: 3000
    mergeSql: true
security:
  oauth2:
    resource:
      #将我们的资源拦截的过滤器运行顺序放到第3个执行,也就是在oauth2的认证服务器后面执行
      filter-order: 3
# 打印sql
logging:
  level:
    com.matridx.index: debug
##myibatis 拦截配置
sql:
  interceptor:
    pagesqlid: .*getPaged*.*
    dialect: postgresql
##角色切换配置： 0不支持切换，1支持切换
matridx:
  role:
    switch: 1
  basictype:
    file: config/comm/basicType.xml
  imptype:
    file: config/comm/config-import.xml
  exptype:
    file: config/comm/config-export.xml
    limit: 500
  fileupload:
    prefix: 
    tempPath: /matridx/fileupload/temp/
    releasePath: /matridx/fileupload/release/
  file:
    ##文件导出存放路径
    exportFilePath: /matridx/download/
    ##文件保存路径前缀
    pathPrefix: 
    ##文件转换最大次数
    translimit: 5
  ftp:
    wordpath: /doc
    pdfpath: /doc
    url: 172.17.60.90
    user: root
    pd: 112
    port: 22
  audio:
    savepath: /matridx/audio/save/
    audiotype: ali       ##ali  baidu
    accessKeyId: Fyj2gzZ9dU2Xw2lxrxfBQzJVhPyCTTb2m8Ia5X4cJ9k=1
    accessKeySecret: AElsGW16bjaYU2qiTVqwIOzhlmPt5FpxGq6c5XKsKHM=1
    appid: vo88lJAbqCj5CzwR8/u4cTJVhPyCTTb2m8Ia5X4cJ9k=1
  wechat:
    appid: WzjbINpFtNAhZsum6hI0c+CpvIamBic/0/0W51yL5Ms=
    secret: mGdrd4I6RhK9j2koJS39c4hh4I0/GxmECKz6KJvXSJAyVYT8gk029pvCGuV+HCfZ
    token: tknUOBawaYs4o/3HvH6KIw==
    selfopenid: gh_818f475a34f6
    paternerkey: 
    mchid:  
    applicationurl: 
    # 微信通知的模板ID
    templateid: sxo6SFS1LYtzvVV9CeJ68HOkGHmdM-0vkopyQtoHGZ4
  baidu:
    appkey: 
    secret: 
  alipay:
    # 应用ID,您的APPID，收款账号既是您的APPID对应支付宝账号
    app_id: TRCxiqEB0TKM5sAmlgiDJjJVhPyCTTb2m8Ia5X4cJ9k=
    # 应用ID,您的APPID，收款账号既是您的APPID对应支付宝账号
    #uid: 2088102177450010
    # 商户私钥，您的PKCS8格式RSA2私钥
    alipay_private_key: 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
    # 支付宝公钥,查看地址：https://openhome.alipay.com/platform/keyManage.htm 对应APPID下的支付宝公钥。
    alipay_public_key: bB/tVjlQkgeF4NVVrnTY2fk2I3CMOmGch9nVgSKatmPYWAj+KzEMb0WeTmsL3FdZRTZP+pvyr4WivXG1Q/AtEoLmX1kuHnJf1RGn7chI5/Bj5Gwnc5Gx6SxSiFAwBrGGTYlWADREvtZJkRiQ7O99pz3icE2sa3L3lvlKWwUOMeD8rpVY4eu3Xv5O6wDrs2rlt0TRp2GS/okVue6UkJvazi2hKNkrVYisszo4OHUOqsNTnCtSi2eze0Yqm2NTxQ9ZeQ2SyoxlrlsBX7yoczuBNtKDUOD68nhcag0bCnYsE9uwdQpDbny08+u3TeuAJpj+VxeTmq3fB7yOZ9MDUsayJ/81KUv8Q5D6KI2GRQgElh6pUB4knX2FrAoWRZ7//LAvsLvjAwbxMN2/3ptS8HxQfYo8c6T/U0KwEYx0CgutdYK/TvIyhg0lXFOyC/Vzqmt5gyRaJazD6CRd2mcduQ72Ff4gO4sh4oilzz/P8dZAnsviRSL1uiVBxeNpfj9aiB5q49GOlYlTjmvUzVxXwpde+w==
    # 服务器异步通知页面路径  需http://格式的完整路径，不能加?id=123这类自定义参数 
    notify_url: http://101.68.81.90:8099/wechat/pay/aliPayNotify
    # 页面跳转同步通知页面路径 需http://格式的完整路径，不能加?id=123这类自定义参数 
    return_url: http://101.68.81.90:8099/wechat/pay/aliPayComplete
    # 签名方式
    alipay_sign_type: RSA2
    # 支付宝网关
    gatewayUrl: https://openapi.alipay.com/gateway.do
server:
  port: ${port:8083}