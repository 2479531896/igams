<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.matridx.igams.bioinformation.dao.post.IWkcxbbDao">

    <select id="getDto" parameterType="WkcxbbDto" resultType="WkcxbbDto">
        select
        wkcxbb.jgid ,
        wkcxbb.wkbh ,
        wkcxbb.rawreads ,
        wkcxbb.totalreads ,
        wkcxbb.homo ,
        wkcxbb.bacteria ,
        wkcxbb.fungi ,
        wkcxbb.viruses ,
        wkcxbb.parasite ,
        wkcxbb.others ,
        wkcxbb.unmapped ,
        wkcxbb.spikein ,
        wkcxbb.spikeinrpm ,
        wkcxbb.bbh ,
        wkcxbb.spike ,
        wkcxbb.ryzs ,
        wkcxbb.rypw ,
        wkcxbb.sfzwqckj,
        wkcxbb.lrsj
        from igams_wkcxbb wkcxbb
        <where>
            <if test="wkcxid != null and wkcxid != ''">
                and wkcxbb.wkcxid = #{wkcxid}
            </if>
            <if test="bbh != null and bbh != ''">
                and wkcxbb.bbh = #{bbh}
            </if>
            <if test="wkcxid != null and wkcxid != ''">
                order by wkcxbb.lrsj desc limit 1
            </if>
        </where>
    </select>
    <select id="getZxbbDtoByXpAndWKbh"  parameterType="WkcxbbDto" resultType="WkcxbbDto">
        select
        wkcx.wkcxid ,
        wkcxbb.jgid ,
        wkcxbb.wkbh ,
        wkcxbb.rawreads ,
        wkcxbb.totalreads ,
        wkcxbb.homo ,
        wkcxbb.bacteria ,
        wkcxbb.fungi ,
        wkcxbb.viruses ,
        wkcxbb.parasite ,
        wkcxbb.others ,
        wkcxbb.unmapped ,
        wkcxbb.spikein ,
        wkcxbb.spikeinrpm ,
        wkcxbb.bbh ,
        wkcxbb.spike ,
        wkcxbb.ryzs ,
        wkcxbb.rypw ,
        wkcxbb.sfzwqckj,
        wkcxbb.lrsj
        from igams_wkcxbb wkcxbb
        left join igams_wkcx wkcx on wkcx.wkcxid=wkcxbb.wkcxid
        left join igams_xpxx xpxx on xpxx.xpid=wkcx.xpid
        <where>
            <if test="wkbh != null and wkbh != ''">
                and wkcxbb.wkbh = #{wkbh}
            </if>
            <if test="bbh != null and bbh != ''">
                and wkcxbb.bbh = #{bbh}
            </if>
            <if test="xpm != null and xpm != ''">
                and xpxx.xpm = #{xpm}
            </if>
            <if test="wkbh != null and wkbh != ''">
                order by wkcxbb.lrsj desc limit 1
            </if>
        </where>
    </select>
    <select id="getZxbbDto" parameterType="WkcxbbDto" resultType="WkcxbbDto">
        select
        wkcxbb.jgid ,
        wkcxbb.wkbh ,
        wkcxbb.rawreads ,
        wkcxbb.totalreads ,
        wkcxbb.homo ,
        wkcxbb.bacteria ,
        wkcxbb.fungi ,
        wkcxbb.viruses ,
        wkcxbb.parasite ,
        wkcxbb.others ,
        wkcxbb.unmapped ,
        wkcxbb.spikein ,
        wkcxbb.spikeinrpm ,
        wkcxbb.bbh ,
        wkcxbb.spike ,
        wkcxbb.ryzs ,
        wkcxbb.rypw ,
        wkcxbb.sfzwqckj,
        wkcxbb.lrsj
        from igams_wkcxbb wkcxbb
        <where>
            <if test="wkbh != null and wkbh != ''">
                and wkcxbb.wkbh = #{wkbh}
            </if>
            <if test="bbh != null and bbh != ''">
                and wkcxbb.bbh = #{bbh}
            </if>
            <if test="wkbh != null and wkbh != ''">
                order by wkcxbb.lrsj desc limit 1
            </if>
        </where>
    </select>

    <select id="getDtoByBbhAndWkbh" parameterType="WkcxbbDto" resultType="WkcxbbDto">
        select wkcxbb.jgid ,wkcxbb.wkbh , wkcxbb.wkcxid, wkcxbb.rawreads ,wkcxbb.totalreads ,wkcxbb.homo ,wkcxbb.bacteria ,wkcxbb.fungi ,
               wkcxbb.viruses ,wkcxbb.parasite ,wkcxbb.others ,wkcxbb.unmapped ,wkcxbb.spikein ,wkcxbb.spikeinrpm ,wkcxbb.bbh ,wkcxbb.spike ,
               wkcxbb.ryzs , wkcxbb.rypw ,wkcxbb.sfzwqckj ,wkcxbb.lrsj
        from igams_wkcxbb wkcxbb
        <where>
            wkcxbb.bbh = #{bbh} and wkcxbb.wkbh = #{wkbh}
        </where>
    </select>

    <insert id="insert" parameterType="WkcxbbDto">
        insert into igams_wkcxbb(
        <if test="jgid != null and jgid != ''">
            jgid,
        </if>
        <if test="wkbh != null and wkbh != ''">
            wkbh,
        </if>
        <if test="wkcxid != null and wkcxid != ''">
            wkcxid,
        </if>
        <if test="rawreads != null and rawreads != ''">
            rawreads,
        </if>
        <if test="totalreads != null and totalreads != ''">
            totalreads,
        </if>
        <if test="homo != null and homo != ''">
            homo,
        </if>
        <if test="bacteria != null and bacteria != ''">
            bacteria,
        </if>
        <if test="fungi != null and fungi != ''">
            fungi,
        </if>
        <if test="viruses != null and viruses != ''">
            viruses,
        </if>
        <if test="parasite != null and parasite != ''">
            parasite,
        </if>
        <if test="others != null and others != ''">
            others,
        </if>
        <if test="unmapped != null and unmapped != ''">
            unmapped,
        </if>
        <if test="spikein != null and spikein != ''">
            spikein,
        </if>
        <if test="spikeinrpm != null and spikeinrpm != ''">
            spikeinrpm,
        </if>
        <if test="bbh != null and bbh != ''">
            bbh,
        </if>
        <if test="spike != null and spike != ''">
            spike,
        </if>
        <if test="ryzs != null and ryzs != ''">
            ryzs,
        </if>
        <if test="rypw != null and rypw != ''">
            rypw,
        </if>
        <if test="spikejson != null and spikejson != ''">
            spikejson,
        </if>
        <if test="sfzwqckj != null and sfzwqckj != ''">
            sfzwqckj,
        </if>
        lrsj)
        values (
        <if test="jgid != null and jgid != ''">
            #{jgid},
        </if>
        <if test="wkbh != null and wkbh != ''">
            #{wkbh},
        </if>
        <if test="wkcxid != null and wkcxid != ''">
            #{wkcxid},
        </if>
        <if test="rawreads != null and rawreads != ''">
            #{rawreads},
        </if>
        <if test="totalreads != null and totalreads != ''">
            #{totalreads},
        </if>
        <if test="homo != null and homo != ''">
            #{homo},
        </if>
        <if test="bacteria != null and bacteria != ''">
            #{bacteria},
        </if>
        <if test="fungi != null and fungi != ''">
            #{fungi},
        </if>
        <if test="viruses != null and viruses != ''">
            #{viruses},
        </if>
        <if test="parasite != null and parasite != ''">
            #{parasite},
        </if>
        <if test="others != null and others != ''">
            #{others},
        </if>
        <if test="unmapped != null and unmapped != ''">
            #{unmapped},
        </if>
        <if test="spikein != null and spikein != ''">
            #{spikein},
        </if>
        <if test="spikeinrpm != null and spikeinrpm != ''">
            #{spikeinrpm},
        </if>
        <if test="bbh != null and bbh != ''">
            #{bbh},
        </if>
        <if test="spike != null and spike != ''">
            #{spike},
        </if>
        <if test="ryzs != null and ryzs != ''">
            #{ryzs},
        </if>
        <if test="rypw != null and rypw != ''">
            #{rypw},
        </if>
        <if test="spikejson != null and spikejson != ''">
            CAST( #{spikejson} AS json),
        </if>
        <if test="sfzwqckj != null and sfzwqckj != ''">
            #{sfzwqckj},
        </if>
        cast(#{lrsj} as timestamp)
        )

    </insert>

    <select id="getDtoByJgid" parameterType="WkcxbbDto" resultType="WkcxbbDto">
        select
            wkcxbb.totalreads ,wkcxbb.rawreads,wkcxbb.homo,wkcxbb.viruses,wkcxbb.ryzs,
            wkcxbb.rypw,wkcxbb.spikeinrpm as spike_rpm
        from igams_wkcxbb wkcxbb
        where <if test="jgid != null and jgid != ''">
                wkcxbb.jgid=#{jgid}
             </if>
    </select>

    <select id="getSjxx" parameterType="WkcxbbDto" resultType="WkcxbbDto">
            select yblx,ybbh
            from igams_sjxx
            where sjid=#{sjid}
    </select>
    <insert id="addWzqf" parameterType="list">
        <if test="list.size > 0 and list != null">
            insert into matridx_wzqzfw (taxid,yblx,zxz,zdz) values
            <foreach collection="list" separator="," item="item" index="index">
                (#{item.taxid},#{item.yblx},#{item.zxz},#{item.zdz})
            </foreach>

        </if>

    </insert>
    <update id="updateYblx">
        UPDATE matridx_wzqzfw a
        set yblx= fd.csid
        from matridx_jcsj fd
        where a.yblx = fd.csdm and jclb='WECGATSAMPLE_TYPE'
    </update>
    <select id="getWzqzfw" parameterType="WkcxbbDto" resultType="WkcxbbDto">
        select wzqzfw.zdz,wzqzfw.zxz
        from matridx_wzqzfw wzqzfw
        where
              <if test="yblx != null and yblx != ''">
                  wzqzfw.yblx=#{yblx}
              </if>
              <if test="taxid != null and taxid != ''">
                 and wzqzfw.taxid=#{taxid}
              </if>
    </select>

    <select id="syncVersionData"  parameterType="WkcxbbDto" resultType="WkcxbbDto">
        select
        wk.id as wkcxid,
        wk.uid as wkbh,
        wk.version_dates,
        wk.spike_detail as spike,
        wk.host_index as ryzs,
        wk.host_percentile as rypw,
        wk.analysis_version as fxbb,
        wk.q_ref as sfzwqckj
        from core_sample wk
        where wk.uid not like  '%DNA-RNA%'  and wk.uid not like  '%RNA-DNA%' and (wk.uid like '%RNA%' or wk.uid like '%DNA%' ) order by wk.id asc
        LIMIT #{pageSize} OFFSET #{pageStart}
    </select>

    <insert id="insertList" parameterType="List">
        insert into igams_wkcxbb(
        jgid,
        wkbh,
        wkcxid,
        rawreads,
        totalreads,
        homo,
        bacteria,
        fungi,
        viruses,
        parasite,
        others,
        unmapped,
        spikein,
        spikeinrpm,
        bbh,
        spike,
        ryzs,
        rypw,
        sfzwqckj,
        lrsj
        )
        values
        <if test="list !=null and list.size > 0">
            <foreach collection="list" separator="," item="item" index="index">
                (
                #{item.jgid},
                #{item.wkbh},
                #{item.wkcxid},
                #{item.rawreads},
                #{item.totalreads},
                #{item.homo},
                #{item.bacteria},
                #{item.fungi},
                #{item.viruses},
                #{item.parasite},
                #{item.others},
                #{item.unmapped},
                #{item.spikein},
                #{item.spikeinrpm},
                #{item.bbh},
                #{item.spike},
                #{item.ryzs},
                #{item.rypw},
                #{item.sfzwqckj},
                cast(#{item.lrsj} as timestamp )
                )
            </foreach>
        </if>
    </insert>


    <insert id="insertXpxx" parameterType="List">
        <if test="list != null and list.size()>0">
            insert into igams_xpxx
            (xpid,xpm,cxyid) values
            <foreach collection="list" open="" close="" separator="," item="item">
                ( #{item.zjid},#{item.xpm},#{item.csid})
            </foreach>
        </if>
    </insert>
    <insert id="insertSample" parameterType="List">
        <if test="list != null and list.size()>0">
            insert into igams_wkcx
            (wkcxid,wkbh,xpid,sffsbg,fxbb,fcjc,sjid,cxid,sysid,wklx,cleangc,cleanq20,cleanq30,adapter,barcodematch,clean,dilutionf,libccon,nuccon,qc,lrsj,scbj,zxbb,rawreads,comment,rnareadsrate,xgsj)
             values
            <foreach collection="list" open="" close="" separator="," item="item">
                (#{item.wkcxid},#{item.wkbh},#{item.xpid},#{item.sffsbg},#{item.fxbb},#{item.fcjc},#{item.sjid},#{item.cxyid},#{item.sysid},#{item.wklx},#{item.cleangc},#{item.cleanq20},#{item.cleanq30},#{item.adapter},#{item.barcodematch},#{item.clean},#{item.dilutionf},#{item.libccon},#{item.nuccon},#{item.qc},cast(#{item.lrsj} as timestamp),#{item.scbj},#{item.zxbb},#{item.rawreads},#{item.comment},#{item.rnareadsrate},cast(#{item.xgsj} as timestamp))
            </foreach>
        </if>
    </insert>
    <insert id="insertCnvjg" parameterType="List">
        <if test="list != null and list.size()>0">
            insert into igams_cnvjg
            (cnvjgid,wkbh,wkcxid,sjl,bdxls,uniqxls,gchl,waviness,karyotype,xb,zszl,shjg,aijg,qcfs,lrsj,bdl,xpid,onresult) values
            <foreach collection="list" open="" close="" separator="," item="item">
                (#{item.cnvjgid},#{item.wkbh},#{item.wkcxid},#{item.sjl},#{item.bdxls},#{item.uniqxls},#{item.gchl},#{item.waviness},#{item.karyotype},#{item.xb},#{item.zszl},#{item.shjg},#{item.aijg},#{item.qcfs},cast(#{item.lrsj} as timestamp),#{item.bdl},#{item.xpid},#{item.onresult})
            </foreach>
        </if>
    </insert>
    <insert id="insertCnvjgxq" parameterType="List">
        <if test="list != null and list.size()>0">
            insert into igams_cnvjgxq
            (cnvjgxqid,cnvjgid,rst,qsqd,zzqd,cnvlx,sfqh,sffzsb,qswz,zzwz,kbs,cnvjg,cnvxq,sfhb,xpid,sfsdtj,lrsj,wkcxid,scbj) values
            <foreach collection="list" open="" close="" separator="," item="item">
                (#{item.cnvjgxqid},#{item.cnvjgid},#{item.rst},#{item.qsqd},#{item.zzqd},#{item.cnvlx},#{item.sfqh},#{item.sffzsb},cast(#{item.qswz} as numeric),
                cast(#{item.zzwz} as numeric),
                cast(#{item.kbs} as float ),#{item.cnvjg},#{item.cnvxq},#{item.sfhb},#{item.xpid},#{item.sfsdtj},cast(#{item.lrsj} as timestamp),#{item.wkcxid},#{item.scbj})
            </foreach>
        </if>
    </insert>





</mapper>
