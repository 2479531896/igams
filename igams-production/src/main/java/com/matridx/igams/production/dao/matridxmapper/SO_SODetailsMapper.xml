<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.matridx.igams.production.dao.matridxsql.SO_SODetailsDao">

    <select id="getSO_SODetailsInfo" parameterType="SO_SODetailsDto" resultType="SO_SODetailsDto">
     select SO_SODetails.AutoID as xsmxid,SO_SODetails.cSOCode,SO_SODetails.cInvCode,SO_SODetails.dPreDate,
     (CONVERT(DECIMAL(30,2),SO_SODetails.iQuantity)) - (CONVERT(DECIMAL(30,2),isnull(SO_SODetails.iFHQuantity,0))) as iQuantity,SO_SODetails.iNum,CONVERT(DECIMAL(30,2),
     SO_SODetails.iQuotedPrice) as iQuotedPrice,CONVERT(DECIMAL(30,2),SO_SODetails.iUnitPrice) as iUnitPrice,
     CONVERT(DECIMAL(30,2),SO_SODetails.iTaxUnitPrice) as iTaxUnitPrice,SO_SODetails.iMoney,SO_SODetails.iTax,
     SO_SODetails.iSum,SO_SODetails.iDisCount,SO_SODetails.iNatUnitPrice,SO_SODetails.iNatMoney,SO_SODetails.iNatTax,
     SO_SODetails.iNatSum,SO_SODetails.iNatDisCount,SO_SODetails.iFHNum,SO_SODetails.iFHQuantity,SO_SODetails.iFHMoney,
     SO_SODetails.iKPQuantity,SO_SODetails.iKPNum,SO_SODetails.iKPMoney,SO_SODetails.cMemo,SO_SODetails.cFree1,
     SO_SODetails.cFree2,SO_SODetails.bFH,SO_SODetails.iSOsID,SO_SODetails.KL as kl,SO_SODetails.KL2 as kl2,SO_SODetails.cInvName,
     SO_SODetails.iTaxRate,SO_SODetails.cDefine22,SO_SODetails.cDefine23,SO_SODetails.cDefine24,SO_SODetails.cDefine25,
     SO_SODetails.cDefine26,SO_SODetails.cDefine27,SO_SODetails.cItemCode,SO_SODetails.cItem_class,SO_SODetails.cItemName,
     SO_SODetails.cItem_CName,SO_SODetails.cFree3,SO_SODetails.cFree4,SO_SODetails.cFree5,SO_SODetails.cFree6,
     SO_SODetails.cFree7,SO_SODetails.cFree8,SO_SODetails.cFree9,SO_SODetails.cFree10,SO_SODetails.iInvExchRate,
     SO_SODetails.cUnitID,SO_SODetails.ID as xsid,SO_SODetails.cDefine28,SO_SODetails.cDefine29,SO_SODetails.cDefine30,
     SO_SODetails.cDefine31,SO_SODetails.cDefine32,SO_SODetails.cDefine33,SO_SODetails.cDefine34,SO_SODetails.cDefine35,
     SO_SODetails.cDefine36,SO_SODetails.cDefine37,SO_SODetails.FPurQuan,SO_SODetails.fSaleCost,SO_SODetails.fSalePrice,
     SO_SODetails.cQuoCode,SO_SODetails.iQuoID,SO_SODetails.cSCloser,SO_SODetails.dPreMoDate,SO_SODetails.iRowNo,
     SO_SODetails.iCusBomID,SO_SODetails.iMoQuantity,SO_SODetails.cContractID,SO_SODetails.cContractTagCode,
     SO_SODetails.cContractRowGuid,SO_SODetails.iPPartSeqID,SO_SODetails.iPPartID,SO_SODetails.iPPartQty,
     SO_SODetails.cCusInvCode,SO_SODetails.cCusInvName,SO_SODetails.iPreKeepQuantity,SO_SODetails.iPreKeepNum,
     SO_SODetails.iPreKeepTotQuantity,SO_SODetails.iPreKeepTotNum,SO_SODetails.dreleasedate,SO_SODetails.fcusminprice,
     SO_SODetails.fimquantity,SO_SODetails.fomquantity,SO_SODetails.ballpurchase,SO_SODetails.finquantity,
     SO_SODetails.icostquantity,SO_SODetails.icostsum,SO_SODetails.foutquantity,SO_SODetails.foutnum,SO_SODetails.iexchsum,
     SO_SODetails.imoneysum,SO_SODetails.dufts,SO_SODetails.iaoids,SO_SODetails.cpreordercode,SO_SODetails.fretquantity,
     SO_SODetails.fretnum,SO_SODetails.dbclosedate,SO_SODetails.dbclosesystime,SO_SODetails.bOrderBOM,SO_SODetails.bOrderBOMOver,
     SO_SODetails.idemandtype,SO_SODetails.cdemandcode,SO_SODetails.cdemandmemo,SO_SODetails.fPurSum,SO_SODetails.fPurBillQty,
     SO_SODetails.fPurBillSum,SO_SODetails.iimid,SO_SODetails.ccorvouchtype,SO_SODetails.icorrowno,SO_SODetails.busecusbom,
     SO_SODetails.body_outid,SO_SODetails.fVeriDispQty,SO_SODetails.fVeriDispSum,SO_SODetails.bsaleprice,SO_SODetails.bgift,
     SO_SODetails.forecastdid,SO_SODetails.cdetailsdemandcode,SO_SODetails.cdetailsdemandmemo,SO_SODetails.fTransedQty,
     SO_SODetails.cbSysBarCode,SO_SODetails.fappqty,SO_SODetails.cParentCode,SO_SODetails.cChildCode,SO_SODetails.fchildqty,
     SO_SODetails.fchildrate,SO_SODetails.iCalcType,SO_SODetails.iCurPartid,SO_SODetails.cFactoryCode,SO_SODetails.GCSourceId,
     SO_SODetails.GCSourceIds,SO_SOMain.iExchRate,SO_SOMain.iTaxRate as miTaxRate,SO_SOMain.cMemo as mcMemo,SO_SOMain.cCusCode as khdm,SO_SOMain.cCusName,SO_SOMain.cexch_name
     from SO_SODetails
     left join SO_SOMain on SO_SODetails.ID = SO_SOMain.ID
     <where>
      <trim prefixOverrides="and">
       <if test="ID !=null and ID != ''">
        SO_SODetails.ID = #{ID}
       </if>
       <if test="ids !=null and ids.size >0">
        and SO_SODetails.AutoID in
        <foreach collection="ids" open="(" close=")" separator="," item="item">
         #{item}
        </foreach>
       </if>
      </trim>
     </where>
    </select>
    
    <update id="updateListDtos" parameterType="List">
		<if test="list !=null and list.size > 0">
			<foreach collection="list" separator=";" item="item" index="index">
				update SO_SODetails
			<set>
				iFHNum=COALESCE(iFHNum,0) + cast(#{item.iFHNum} as numeric(16,5)),iFHQuantity=COALESCE(iFHQuantity,0) + cast(#{item.iFHQuantity} as numeric(16,5)),
				iFHMoney=COALESCE(iFHMoney,0) + cast(#{item.iFHMoney} as numeric(16,5)),
				foutquantity=COALESCE(foutquantity,0) + cast(#{item.foutquantity} as numeric(16,5)),foutnum=#{item.foutnum},
				fVeriDispQty=COALESCE(fVeriDispQty,0) + cast(#{item.fVeriDispQty} as numeric(16,5)),
				fVeriDispSum=COALESCE(fVeriDispSum,0) + cast(#{item.fVeriDispSum} as numeric(16,5))
			</set>
			<where>
                cInvCode=#{item.cInvCode} and ID = #{item.ID} and cSOCode = #{item.cSOCode}
			</where>
			</foreach>
		</if>
	</update>
    <update id="updateSoListDtos" parameterType="List">
        <if test="list !=null and list.size > 0">
            <foreach collection="list" separator=";" item="item" index="index">
                update SO_SODetails
                <set>
                    iFHNum=#{item.iFHNum},
                    iFHQuantity=COALESCE(iFHQuantity,0) - cast(#{item.iFHQuantity} as numeric(16,5)),
                    iFHMoney=COALESCE(iFHMoney,0) - cast(#{item.iFHMoney} as numeric(16,5)),
                    foutquantity=COALESCE(foutquantity,0) - cast(#{item.foutquantity} as numeric(16,5)),foutnum=#{item.foutnum},
                    fretquantity=COALESCE(fretquantity,0) + cast(#{item.fretquantity} as numeric(16,5)),
                    fretnum=#{item.fretnum},
                    fVeriDispQty=COALESCE(fVeriDispQty,0) - cast(#{item.fVeriDispQty} as numeric(16,5)),
                    fVeriDispSum=#{item.fVeriDispSum}
                </set>
                <where>
                    iSOsID=#{item.iSOsID}
                </where>
            </foreach>
        </if>
    </update>

    <insert id="insert" parameterType="SO_SODetailsDto">
        INSERT INTO SO_SODetails
        (
            cSOCode,
            cInvCode,
            dPreDate,
            iQuantity,
            iQuotedPrice,
            iUnitPrice,
            iTaxUnitPrice,
            iMoney,
            iTax,
            iSum,
            iDisCount,
            iNatUnitPrice,
            iNatMoney,
            iNatTax,
            iNatSum,
            iNatDisCount,
            iFHNum,
            iFHQuantity,
            iFHMoney,
            foutquantity,
            foutnum,
            fVeriDispQty,
            fVeriDispSum,
            iSOsID,
            KL,
            KL2,
            cInvName,
            iTaxRate,
            ID,
            fSaleCost,
            fSalePrice,
            dPreMoDate,
            fcusminprice,
            ballpurchase,
            bOrderBOM,
            bOrderBOMOver,
            busecusbom,
            bsaleprice,
            bgift,
            cbSysBarCode
        )
        VALUES
        (

            #{cSOCode},
            #{cInvCode},
             cast(#{dPreDate} as datetime),
            #{iQuantity},
            #{iQuotedPrice},
            #{iUnitPrice},
            #{iTaxUnitPrice},
            #{iMoney},
            #{iTax},
            #{iSum},
            #{iDisCount},
            #{iNatUnitPrice},
            #{iNatMoney},
            #{iNatTax},
            #{iNatSum},
            #{iNatDisCount},
            #{iFHNum},
            #{iFHQuantity},
            #{iFHMoney},
            #{foutquantity},
            #{foutnum},
            #{fVeriDispQty},
            #{fVeriDispSum},
            #{iSOsID},
            #{KL},
            #{KL2},
            #{cInvName},
            #{iTaxRate},
            #{ID},
            #{fSaleCost},
            #{fSalePrice},
            cast(#{dPreMoDate} as datetime),
            #{fcusminprice},
            #{ballpurchase},
            #{bOrderBOM},
            #{bOrderBOMOver},
            #{busecusbom},
            #{bsaleprice},
            #{bgift},
            #{cbSysBarCode}
        )
    </insert>

    <insert id="insertList" parameterType="List">
        INSERT INTO SO_SODetails
        (
        cSOCode,
        cInvCode,
        dPreDate,
        iQuantity,
        iQuotedPrice,
        iUnitPrice,
        iTaxUnitPrice,
        iMoney,
        iTax,
        iSum,
        iDisCount,
        iNatUnitPrice,
        iNatMoney,
        iNatTax,
        iNatSum,
        iNatDisCount,
        iFHNum,
        iFHQuantity,
        iFHMoney,
        foutquantity,
        foutnum,
        fVeriDispQty,
        fVeriDispSum,
        iSOsID,
        KL,
        KL2,
        cInvName,
        iTaxRate,
        ID,
        fSaleCost,
        fSalePrice,
        dPreMoDate,
        fcusminprice,
        ballpurchase,
        bOrderBOM,
        bOrderBOMOver,
        busecusbom,
        bsaleprice,
        bgift,
        cbSysBarCode,
        iRowNo
        )values
        <if test="list !=null and list.size > 0">
            <foreach collection="list" separator="," item="item" index="index">
                ( #{item.cSOCode},
                #{item.cInvCode},
                cast(#{item.dPreDate} as datetime),
                #{item.iQuantity},
                #{item.iQuotedPrice},
                #{item.iUnitPrice},
                #{item.iTaxUnitPrice},
                #{item.iMoney},
                #{item.iTax},
                #{item.iSum},
                #{item.iDisCount},
                #{item.iNatUnitPrice},
                #{item.iNatMoney},
                #{item.iNatTax},
                #{item.iNatSum},
                #{item.iNatDisCount},
                #{item.iFHNum},
                #{item.iFHQuantity},
                #{item.iFHMoney},
                #{item.foutquantity},
                #{item.foutnum},
                #{item.fVeriDispQty},
                #{item.fVeriDispSum},
                #{item.iSOsID},
                #{item.KL},
                #{item.KL2},
                #{item.cInvName},
                #{item.iTaxRate},
                #{item.ID},
                #{item.fSaleCost},
                #{item.fSalePrice},
                cast(#{item.dPreMoDate} as datetime),
                #{item.fcusminprice},
                #{item.ballpurchase},
                #{item.bOrderBOM},
                #{item.bOrderBOMOver},
                #{item.busecusbom},
                #{item.bsaleprice},
                #{item.bgift},
                #{item.cbSysBarCode},
                #{item.iRowNo})
            </foreach>
        </if>
    </insert>
    <select id="getIrownoByiSOsID" parameterType="SO_SODetailsDto" resultType="SO_SODetailsDto">
        select iRowNo,iSOsID from SO_SODetails where iSOsID = #{iSOsID}
    </select>
</mapper>