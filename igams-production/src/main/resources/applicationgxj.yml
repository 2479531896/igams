## 分布式文件系统
spring:
  config:
    import: optional:configserver:${uri:http://172.17.60.192:8760}
  application:
    name: igams-production
  rabbitmq:
    host: ${mqhost:172.17.60.191}
    port: 5672
    username: ${mqname:admin}
    password: ${mqpass:matridx2019!}
    docok: ${mqok:production.mq.tran.matridx.ok}
  cloud:
    config:
      ##文件名称
      name: ${name:igams-production}
      ##文件后缀
      profile: ${profile:dev}
      uri: ${uri:http://localhost:8760}
      discovery:
        enabled: true
        serviceId: config-server
    client:
      ipAddress: ${ipaddr:localhost}
  session:
    ##session存储类型
    store-type: redis
    ##设置session超时时间
    timeout: 2000
  ##spring boot自带的tomcat限制了上传图片的大小，为1M
  servlet:
    multipart:
      enabled: true # 使用 http multipart 上传
      max-file-size: 1024MB
      max-request-size: 200MB
  cache:
    ehcache:
      config: classpath:config/production/ehcache/productionehcache.xml
  redis:
    ## Redis数据库索引（默认为0）
    database: 0
    ## Redis服务器地址
    host: localhost
    ## Redis服务器连接端口
    port: 6379
    ## Redis服务器连接密码（默认为空）
    password: 
    pool:
      ## 连接池最大连接数（使用负值表示没有限制）
      max-active: 8
      ## 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: -1
      ## 连接池中的最大空闲连接
      max-idle: 8
      ## 连接池中的最小空闲连接
      min-idle: 0
    ## 连接超时时间（毫秒）中时间设置不能为0
    timeout: 5000
  ## druid配置
  datasource:
    ## 连接池最小连接数量
    minIdle: 5
    ## 连接池最大连接数量
    maxActive: 100
    ## 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
    initialSize: 10
    ## 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
    maxWait: 60000
    ## 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒;有两个含义：1) Destroy线程会检测连接的间隔时间 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
    timeBetweenEvictionRunsMillis: 60000
    ## 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    ## 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    testWhileIdle: true
    ## 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
    testOnBorrow: false
    ## 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnReturn: false
    ## 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。5.5及以上版本有PSCache，建议开启。
    poolPreparedStatements: true
    ## 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
    maxPoolPreparedStatementPerConnectionSize: 100
    ## Druid的监控统计功能:属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
    ##监控统计用的filter:stat
    ##日志用的filter:slf4j
    ##防御SQL注入的filter:wall
    filters: config,stat,slf4j
    ## 连接数据库的额外参数 
    connectionProperties: 3000;
    ## 缺省多个DruidDataSource的监控数据是各自独立的，在Druid-0.2.17版本之后，支持配置公用监控数据，
    useGlobalDataSourceStat: true
    ## druid的登录用户名
    druidLoginName: admin
    ## druid的登录密码
    druidPassword: 1234
    ## 超过时间限制是否回收
    removeAbandoned: true
    ## 超过时间限制多长，单位是毫秒 ，180000毫秒=3分钟
    removeAbandonedTimeout: 180000
eureka:
  client:
    enabled: true
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: ${zone:http://user:1234@localhost:8751/eureka/}
  instance:
    prefer-ip-address: true
    ip-address: ${ipaddr:localhost}
    instance-id: ${ipaddr:localhost}:${server.port}
## 打印sql
logging:
  level:
    com.matridx.igams.common.dao.post: debug
    com.matridx.igams.production.dao.post: debug
    com.matridx.igams.warehouse.dao.post: debug
    com.matridx.igams.production.dao.matridxsql: debug
    com.matridx.igams.storehouse.dao.post: debug
    com.matridx.igams.storehouse.dao: debug
    java.sql: debug
    org.apache.ibatis: debug
    com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver: WARN
sql:
  interceptor:
    pagesqlid: .*getPaged*.*
    dialect: postgresql
mybatis:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath*:mapper/**/*.xml
postsql:
  datasource:
    driverClassName: org.postgresql.Driver
    validationQuery: SELECT 1
druid:
  stat:
    ## 连接数据库的额外参数 
    slowSqlMillis: 3000
    mergeSql: true
##执行bus/refresh 报 "status":401,"error":"Unauthorized"错误时，请关闭安全验证
## 刷新配置，在spring boot 2.x 之前1.x的management.security.enabled失效，新的配置为
management:
  security:
    enabled: false
  endpoints:
    web:
      exposure:
        include: bus-refresh
##角色切换配置： 0不支持切换，1支持切换
matridx:
  role:
    switch: 1
  basictype:
    file: config/production/comm/basicType.xml
  imptype:
    file: config/comm/config-import.xml
  exptype:
    file: config/comm/config-export.xml
    limit: 500
  fileupload:
    prefix: 
    tempPath: /matridx/fileupload/temp/
    releasePath: /matridx/fileupload/release/
  file:
    ##文件导出存放路径
    exportFilePath: /matridx/download/
    ##文件保存路径前缀
    pathPrefix: 
    ##文件转换最大次数
    translimit: 5
  ftp:
    wordpath: /wordFile
    pdfpath: /pdfFile
    #url: 172.17.50.35
    url: 172.17.60.177
server:
  port: ${sport:8086}
  tomcat:
    port-header: HEAD,PUT,DELETE,OPTIONS,TRACE,COPY,SEARCH,PROPFIND